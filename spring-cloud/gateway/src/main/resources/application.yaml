
server.port: 8080

spring.application.name: gateway

app.eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5


# ROUTING RULES
# id         - name of the route
# uri        - request to the service, will be router, 
#              EX: lb://product-composite   - routed to product-composite service in the discovery service [Netflix Eureka]
#               protocol lb:// is used to direct the gateway to use client-side load balancer to look up the destination in discovery service
# predicates - what request this route should match
# filters    - modify the request or response after the request is forwarded
spring.cloud.gateway.routes:

  - id: product-composite
    uri: lb://product-composite
    predicates:
    - Path=/product-composite/**

  - id: product-composite-swagger-ui
    uri: lb://product-composite
    predicates:
    - Path=/openapi/** 

  # The {segment} part in the Path value matches zeror or more lemenets in the path  
  # and will be used to replace the {segment} part int the SetPath value
  # Ex: a request to `/eureka/api/serviceregistry` would redirect to `http://${app.eureka.server}:8761/eureka/serviceregistry`
  - id: eureka-api
    uri: http://${app.eureka-server}:8761
    predicates:
    - Path=/eureka/api/{segment}
    filters:
    - SetPath=/eureka/{segment}

  - id: eureka-web-start
    uri: http://${app.eureka-server}:8761
    predicates:
    - Path=/eureka/web
    filters:
    - SetPath=/

  - id: eureka-web-other
    uri: http://${app.eureka-server}:8761
    predicates:
    - Path=/eureka/**


# Configure spring boot actuator
management:
  # this is to enable 
  endpoint.gateway.enabled: true
  endpoint.health.show-details: "ALWAYS"
  endpoints.web.exposure.include: "*"

# Logging
logging: 
  level: 
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO 
    org.springframework.cloud.gateway: TRACE

---
spring.config.activate.on-profile: docker

app.eureka-server: eureka