server.port: 7001
server.error.include-message: always

spring.data.mongodb:
  host: localhost
  port: 27017
  database: product-db

logging: 
  level: 
    root: INFO
    dev.agasen: DEBUG
    se.magnus: DEBUG

### CLOUD STREAM

## define the function name
spring.cloud.function.definition: messageProcessor

spring.cloud.stream:
  ## use rabbit instead of kafka for implementation
  default-binder: rabbit
  default.contentType: application/json
  ## bind the input to the message processors to specific topic names
  bindings.messageProcessor-in-0:
    destination: products
    group: productsGroup

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  ## This tells that Clous Steam should perform 
  ## 3 retries before placing it to DEAD-LETTER QUEUE
  ## 1st retry: 500ms, succeeding(2) retry: 1000ms
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

## Use of dead letter queue is binder specific so we will create for both implementations
spring.cloud.sream:
  rabbit.bindings.messageProcessor-in-0.consumer:
    autoBindDlq: true
    republishToDlq: true
  kafka.bindings.messageProcessor-in-0.consumer:
    enableDlq: true
  
## connectivity config for both Kafka and RabbitMQ
spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest


---
#### DOCKER CONFIGS
spring.config.activate.on-profile: docker

server.port: 8080

spring.data.mongodb.host: mongodb

spring.rabbitmq.host: rabbitmq
spring.cloud.stream.kafka.binder.brokers: kafka


---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  partitioned: true
  instanceCount: 2


---
spring.config.activate.on-profile: streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---
spring.config.activate.on-profile: streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1

---
spring.config.activate.on-profile: kafka

management.health.rabbit.enabled: false
spring.cloud.stream.defaultBinder: kafka
spring.kafka.bootstrap-servers: kafka:9092
spring.cloud.stream.kafka.binder.replication-factor: 1